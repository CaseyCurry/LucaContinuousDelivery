<?xml version="1.0" encoding="utf-8"?>
<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="cruise-config.xsd" schemaVersion="88">
  <server artifactsdir="artifacts" purgeStart="65.0" purgeUpto="75.0" agentAutoRegisterKey="4c964e9a-e19d-4abc-9f9a-93a5d223e9eb" commandRepositoryLocation="default" serverId="ca0e41b7-d645-4599-b490-556cb871c341" />
  <config-repos>
    <config-repo plugin="json.config.plugin">
      <git url="https://github.com/caseycurry/LucaContinuousDelivery.git" />
    </config-repo>
  </config-repos>
  <pipelines group="Map">
    <pipeline name="Luca">
      <materials>
        <git url="https://github.com/caseycurry/LucaOpsEnvironment" dest="ops/environment">
          <filter>
            <ignore pattern="ops/environment/containers" />
          </filter>
        </git>
        <pipeline pipelineName="Application" stageName="Build" materialName="Application" />
        <pipeline pipelineName="CategoriesApi" stageName="Build" />
        <pipeline pipelineName="CheckingAccountApi" stageName="Build" />
        <pipeline pipelineName="CheckingAccountClient" stageName="Build" />
        <pipeline pipelineName="ServiceRegistryApi" stageName="Build" />
        <pipeline pipelineName="ServiceRegistryClient" stageName="Build" />
        <pipeline pipelineName="UsersApi" stageName="Build" />
        <pipeline pipelineName="UsersClient" stageName="Build" />
      </materials>
      <stage name="InstallDependencies" cleanWorkingDir="true">
        <environmentvariables>
          <variable name="PATH">
            <value>/usr/local/bin:/usr/bin:/bin</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="InstallDependencies">
            <tasks>
              <fetchartifact pipeline="Application" stage="Build" job="Build" srcdir="dist" dest="ops/environment/application">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="Application" stage="Build" job="Build" srcfile="version.txt" dest="ops/environment/application">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="CategoriesApi" stage="Build" job="Build" srcdir="dist" dest="ops/environment/services/categories/api">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="CategoriesApi" stage="Build" job="Build" srcfile="version.txt" dest="ops/environment/services/categories/api">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="CheckingAccountApi" stage="Build" job="Build" srcdir="dist" dest="ops/environment/services/checking-account/api">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="CheckingAccountApi" stage="Build" job="Build" srcfile="version.txt" dest="ops/environment/services/checking-account/api">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="CheckingAccountClient" stage="Build" job="Build" srcdir="dist" dest="ops/environment/services/checking-account/client">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="CheckingAccountClient" stage="Build" job="Build" srcfile="version.txt" dest="ops/environment/services/checking-account/client">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="ServiceRegistryApi" stage="Build" job="Build" srcdir="dist" dest="ops/environment/services/service-registry/api">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="ServiceRegistryApi" stage="Build" job="Build" srcfile="version.txt" dest="ops/environment/services/service-registry/api">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="ServiceRegistryClient" stage="Build" job="Build" srcdir="dist" dest="ops/environment/services/service-registry/client">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="ServiceRegistryClient" stage="Build" job="Build" srcfile="version.txt" dest="ops/environment/services/service-registry/client">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="UsersApi" stage="Build" job="Build" srcdir="dist" dest="ops/environment/services/users/api">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="UsersApi" stage="Build" job="Build" srcfile="version.txt" dest="ops/environment/services/users/api">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="UsersClient" stage="Build" job="Build" srcdir="dist" dest="ops/environment/services/users/client">
                <runif status="passed" />
              </fetchartifact>
              <fetchartifact pipeline="UsersClient" stage="Build" job="Build" srcfile="version.txt" dest="ops/environment/services/users/client">
                <runif status="passed" />
              </fetchartifact>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="StartEnvironment" fetchMaterials="false">
        <environmentvariables>
          <variable name="PATH">
            <value>/usr/local/bin:/usr/bin:/bin</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="StartEnvironment">
            <tasks>
              <exec command="/usr/local/bin/vagrant" workingdir="ops/environment">
                <arg>up</arg>
                <runif status="passed" />
              </exec>
              <exec command="/usr/local/bin/vagrant" workingdir="ops/environment">
                <arg>ssh</arg>
                <arg>-c</arg>
                <arg>sudo /bin/bash -c "source /vagrant/scripts/start-application.sh"</arg>
                <runif status="passed" />
              </exec>
              <exec command="/usr/local/bin/vagrant" workingdir="ops/environment">
                <arg>destroy</arg>
                <arg>-f</arg>
                <runif status="any" />
              </exec>
              <exec command="git" workingdir="ops/environment">
                <arg>status</arg>
                <arg>-s</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash" workingdir="ops/environment">
                <arg>-c</arg>
                <arg>source ./scripts/containers/commit.sh</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </pipelines>
  <pipelines group="Commit">
    <pipeline name="Application" template="SimpleCommit">
      <materials>
        <git url="https://github.com/caseycurry/LucaApplication" />
      </materials>
    </pipeline>
    <pipeline name="CategoriesApi" template="SimpleCommit">
      <materials>
        <git url="https://github.com/caseycurry/LucaCategoriesApi" />
      </materials>
    </pipeline>
    <pipeline name="CheckingAccountApi" template="StandardCommit">
      <materials>
        <git url="https://github.com/caseycurry/LucaCheckingAccountApi" />
      </materials>
    </pipeline>
    <pipeline name="CheckingAccountClient" template="StandardCommit">
      <materials>
        <git url="https://github.com/caseycurry/LucaCheckingAccountClient" />
      </materials>
    </pipeline>
    <pipeline name="ServiceRegistryApi" template="StandardCommit">
      <materials>
        <git url="https://github.com/caseycurry/LucaServiceRegistryApi" />
      </materials>
    </pipeline>
    <pipeline name="ServiceRegistryClient" template="SimpleCommit">
      <materials>
        <git url="https://github.com/caseycurry/LucaServiceRegistryClient" />
      </materials>
    </pipeline>
    <pipeline name="UsersApi" template="StandardCommit">
      <environmentvariables>
        <variable name="TOKEN_SECRET" secure="true">
          <encryptedValue>ze9+9B3d1Ic=</encryptedValue>
        </variable>
      </environmentvariables>
      <materials>
        <git url="https://github.com/caseycurry/LucaUsersApi" />
      </materials>
    </pipeline>
    <pipeline name="UsersClient" template="StandardCommit">
      <materials>
        <git url="https://github.com/caseycurry/LucaUsersClient" />
      </materials>
    </pipeline>
  </pipelines>
  <pipelines group="configrepo-example" />
  <pipelines group="Map2" />
  <pipelines group="Commit2" />
  <templates>
    <pipeline name="StandardCommitOld">
      <stage name="Commit" cleanWorkingDir="true">
        <jobs>
          <job name="Build">
            <environmentvariables>
              <variable name="PATH">
                <value>/usr/local/bin:/usr/bin:/bin</value>
              </variable>
            </environmentvariables>
            <tasks>
              <exec command="/usr/local/bin/npm">
                <arg>install</arg>
                <arg>--no-optional</arg>
                <runif status="passed" />
              </exec>
              <exec command="/usr/local/bin/npm">
                <arg>install</arg>
                <arg>mochawesome</arg>
                <runif status="passed" />
              </exec>
              <exec command="mkdir">
                <arg>artifacts</arg>
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>./node_modules/.bin/mocha --opts mocha.opts --reporter mochawesome --reporter-options reportDir=artifacts/mochawesome</arg>
                <runif status="passed" />
              </exec>
              <exec command="node_modules/.bin/webpack">
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Mocha" path="artifacts/mochawesome/mochawesome.html" />
            </tabs>
            <artifacts>
              <artifact src="artifacts/**/*" />
              <artifact src="dist/**/*" dest="artifacts/dist" />
              <artifact src="artifacts/mochawesome/**/*" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="StandardCommit">
      <stage name="Commit" cleanWorkingDir="true">
        <environmentvariables>
          <variable name="PATH">
            <value>/usr/local/bin:/usr/bin:/bin</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="InstallDependencies">
            <tasks>
              <exec command="/usr/local/bin/npm">
                <arg>install</arg>
                <runif status="passed" />
              </exec>
              <exec command="/usr/local/bin/npm">
                <arg>install</arg>
                <arg>mochawesome</arg>
                <arg>mocha-multi</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="UnitTest">
        <environmentvariables>
          <variable name="PATH">
            <value>/usr/local/bin:/usr/bin:/bin</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="UnitTest">
            <tasks>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>node_modules/.bin/mocha --opts mocha.opts  --reporter mocha-multi --reporter-options mochawesome=-,xunit=specs.xml</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <tabs>
              <tab name="Report" path="mochawesome/mochawesome.html" />
            </tabs>
            <artifacts>
              <artifact src="mochawesome-reports/**/*" dest="mochawesome" />
              <test src="specs.xml" />
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="Build">
        <environmentvariables>
          <variable name="PATH">
            <value>/usr/local/bin:/usr/bin:/bin</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="Build">
            <tasks>
              <exec command="node_modules/.bin/webpack">
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>printf $GO_REVISION &gt; version.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="dist/**/*" dest="dist" />
              <artifact src="version.txt" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="SimpleCommit">
      <stage name="Commit" cleanWorkingDir="true">
        <environmentvariables>
          <variable name="PATH">
            <value>/usr/local/bin:/usr/bin:/bin</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="InstallDependencies">
            <tasks>
              <exec command="/usr/local/bin/npm">
                <arg>install</arg>
                <runif status="passed" />
              </exec>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="Build">
        <environmentvariables>
          <variable name="PATH">
            <value>/usr/local/bin:/usr/bin:/bin</value>
          </variable>
        </environmentvariables>
        <jobs>
          <job name="Build">
            <tasks>
              <exec command="node_modules/.bin/webpack">
                <runif status="passed" />
              </exec>
              <exec command="/bin/bash">
                <arg>-c</arg>
                <arg>printf $GO_REVISION &gt; version.txt</arg>
                <runif status="passed" />
              </exec>
            </tasks>
            <artifacts>
              <artifact src="dist/**/*" dest="dist" />
              <artifact src="version.txt" />
            </artifacts>
          </job>
        </jobs>
      </stage>
    </pipeline>
  </templates>
  <agents>
    <agent hostname="Caseys-MacBook.home" ipaddress="127.0.0.1" uuid="c438b723-c3c6-456d-b5e4-de2a6f0b18dc" />
  </agents>
</cruise>
