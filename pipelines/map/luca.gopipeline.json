{
  "name": "Luca",
  "environment_variables": [],
  "group": "Map",
  "materials": [{
      "url": "https://github.com/caseycurry/LucaOpsEnvironment",
      "branch": "master",
      "filter": {
        "ignore": [
          "ops/environment/containers"
        ]
      },
      "destination": "ops/environment",
      "auto_update": true,
      "name": "Environment",
      "type": "git"
    }, {
      "url": "https://github.com/caseycurry/LucaTest",
      "branch": "master",
      "filter": {
        "ignore": []
      },
      "destination": "test",
      "auto_update": true,
      "name": "Test",
      "type": "git"
    },
    {
      "pipeline": "Application",
      "stage": "Package",
      "type": "dependency",
      "name": "Application"
    },
    {
      "pipeline": "CategoriesApi",
      "stage": "Package",
      "type": "dependency",
      "name": "CategoriesApi"
    },
    {
      "pipeline": "CheckingAccountApi",
      "stage": "Package",
      "type": "dependency",
      "name": "CheckingAccountApi"
    },
    {
      "pipeline": "CheckingAccountClient",
      "stage": "Package",
      "type": "dependency",
      "name": "CheckingAccountClient"
    },
    {
      "pipeline": "ServiceRegistryApi",
      "stage": "Package",
      "type": "dependency",
      "name": "ServiceRegistryApi"
    },
    {
      "pipeline": "ServiceRegistryClient",
      "stage": "Package",
      "type": "dependency",
      "name": "ServiceRegistryClient"
    },
    {
      "pipeline": "UsersApi",
      "stage": "Package",
      "type": "dependency",
      "name": "UsersApi"
    },
    {
      "pipeline": "UsersClient",
      "stage": "Package",
      "type": "dependency",
      "name": "UsersClient"
    }
  ],
  "stages": [{
    "name": "FetchDependencies",
    "fetch_materials": true,
    "never_cleanup_artifacts": false,
    "clean_working_directory": true,
    "environment_variables": [{
      "name": "PATH",
      "value": "/usr/local/bin:/usr/bin:/bin"
    }],
    "jobs": [{
      "name": "FetchDependencies",
      "environment_variables": [],
      "tabs": [],
      "resources": [],
      "artifacts": [],
      "properties": [],
      "run_instance_count": null,
      "timeout": 0,
      "tasks": [{
        "type": "fetch",
        "run_if": "passed",
        "pipeline": "Application",
        "stage": "Package",
        "job": "Package",
        "is_source_a_file": false,
        "source": "dist",
        "destination": "ops/environment/application"
      }, {
        "type": "fetch",
        "run_if": "passed",
        "pipeline": "Application",
        "stage": "Package",
        "job": "Package",
        "is_source_a_file": true,
        "source": "version.txt",
        "destination": "ops/environment/application"
      }, {
        "type": "fetch",
        "run_if": "passed",
        "pipeline": "CategoriesApi",
        "stage": "Package",
        "job": "Package",
        "is_source_a_file": false,
        "source": "dist",
        "destination": "ops/environment/services/categories/api"
      }, {
        "type": "fetch",
        "run_if": "passed",
        "pipeline": "CategoriesApi",
        "stage": "Package",
        "job": "Package",
        "is_source_a_file": true,
        "source": "version.txt",
        "destination": "ops/environment/services/categories/api"
      }, {
        "type": "fetch",
        "run_if": "passed",
        "pipeline": "CheckingAccountApi",
        "stage": "Package",
        "job": "Package",
        "is_source_a_file": false,
        "source": "dist",
        "destination": "ops/environment/services/checking-account/api"
      }, {
        "type": "fetch",
        "run_if": "passed",
        "pipeline": "CheckingAccountApi",
        "stage": "Package",
        "job": "Package",
        "is_source_a_file": true,
        "source": "version.txt",
        "destination": "ops/environment/services/checking-account/api"
      }, {
        "type": "fetch",
        "run_if": "passed",
        "pipeline": "CheckingAccountClient",
        "stage": "Package",
        "job": "Package",
        "is_source_a_file": false,
        "source": "dist",
        "destination": "ops/environment/services/checking-account/client"
      }, {
        "type": "fetch",
        "run_if": "passed",
        "pipeline": "CheckingAccountClient",
        "stage": "Package",
        "job": "Package",
        "is_source_a_file": true,
        "source": "version.txt",
        "destination": "ops/environment/services/checking-account/client"
      }, {
        "type": "fetch",
        "run_if": "passed",
        "pipeline": "ServiceRegistryApi",
        "stage": "Package",
        "job": "Package",
        "is_source_a_file": false,
        "source": "dist",
        "destination": "ops/environment/services/service-registry/api"
      }, {
        "type": "fetch",
        "run_if": "passed",
        "pipeline": "ServiceRegistryApi",
        "stage": "Package",
        "job": "Package",
        "is_source_a_file": true,
        "source": "version.txt",
        "destination": "ops/environment/services/service-registry/api"
      }, {
        "type": "fetch",
        "run_if": "passed",
        "pipeline": "ServiceRegistryClient",
        "stage": "Package",
        "job": "Package",
        "is_source_a_file": false,
        "source": "dist",
        "destination": "ops/environment/services/service-registry/client"
      }, {
        "type": "fetch",
        "run_if": "passed",
        "pipeline": "ServiceRegistryClient",
        "stage": "Package",
        "job": "Package",
        "is_source_a_file": true,
        "source": "version.txt",
        "destination": "ops/environment/services/service-registry/client"
      }, {
        "type": "fetch",
        "run_if": "passed",
        "pipeline": "UsersApi",
        "stage": "Package",
        "job": "Package",
        "is_source_a_file": false,
        "source": "dist",
        "destination": "ops/environment/services/users/api"
      }, {
        "type": "fetch",
        "run_if": "passed",
        "pipeline": "UsersApi",
        "stage": "Package",
        "job": "Package",
        "is_source_a_file": true,
        "source": "version.txt",
        "destination": "ops/environment/services/users/api"
      }, {
        "type": "fetch",
        "run_if": "passed",
        "pipeline": "UsersClient",
        "stage": "Package",
        "job": "Package",
        "is_source_a_file": false,
        "source": "dist",
        "destination": "ops/environment/services/users/client"
      }, {
        "type": "fetch",
        "run_if": "passed",
        "pipeline": "UsersClient",
        "stage": "Package",
        "job": "Package",
        "is_source_a_file": true,
        "source": "version.txt",
        "destination": "ops/environment/services/users/client"
      }]
    }]
  }, {
    "name": "TestEndToEnd",
    "fetch_materials": false,
    "never_cleanup_artifacts": false,
    "clean_working_directory": false,
    "environment_variables": [{
      "name": "PATH",
      "value": "/usr/local/bin:/usr/bin:/bin"
    }],
    "jobs": [{
      "name": "TestEndToEnd",
      "environment_variables": [],
      "tabs": [{
        "name": "Report",
        "path": "allure-report/index.html"
      }],
      "resources": [],
      "artifacts": [{
        "source": "ops/environment/test/results",
        "destination": null,
        "type": "build"
      }, {
        "source": "ops/environment/allure-report",
        "destination": null,
        "type": "build"
      }],
      "properties": [],
      "run_instance_count": null,
      "timeout": 0,
      "tasks": [{
        "type": "exec",
        "run_if": "passed",
        "on_cancel": null,
        "command": "cp",
        "arguments": [
          "-R",
          "./test",
          "./ops/environment"
        ],
        "working_directory": null
      }, {
        "type": "exec",
        "run_if": "passed",
        "on_cancel": null,
        "command": "/usr/local/bin/npm",
        "arguments": [
          "install"
        ],
        "working_directory": "ops/environment/test"
      }, {
        "type": "exec",
        "run_if": "passed",
        "on_cancel": null,
        "command": "/usr/local/bin/vagrant",
        "arguments": [
          "up"
        ],
        "working_directory": "ops/environment"
      }, {
        "type": "exec",
        "run_if": "passed",
        "on_cancel": null,
        "command": "/usr/local/bin/vagrant",
        "arguments": [
          "ssh",
          "-c",
          "sudo /bin/bash -c \"source /vagrant/scripts/start-application.sh\""
        ],
        "working_directory": "ops/environment"
      }, {
        "type": "exec",
        "run_if": "passed",
        "on_cancel": null,
        "command": "/usr/local/bin/vagrant",
        "arguments": [
          "ssh",
          "-c",
          "cd /vagrant/test && npm rebuild && ./node_modules/.bin/wdio wdio.conf.js --tags=@ContinuousIntegration"
        ],
        "working_directory": "ops/environment"
      }, {
        "type": "exec",
        "run_if": "any",
        "on_cancel": null,
        "command": "/usr/local/bin/vagrant",
        "arguments": [
          "destroy",
          "-f"
        ],
        "working_directory": "ops/environment"
      }, {
        "type": "exec",
        "run_if": "passed",
        "on_cancel": null,
        "command": "/bin/bash",
        "arguments": [
          "-c",
          "source ./scripts/containers/commit.sh"
        ],
        "working_directory": "ops/environment"
      }, {
        "type": "exec",
        "run_if": "passed",
        "on_cancel": null,
        "command": "curl",
        "arguments": [
          "-XPUT",
          "http://127.0.0.1:9201/deploy-release",
          "-H",
          "Content-Type: application/json",
          "-d",
          "{\"version\":\"1.2.3\"}"
        ],
        "working_directory": null
      }, {
        "type": "exec",
        "run_if": "any",
        "on_cancel": null,
        "command": "/bin/bash",
        "arguments": [
          "-c",
          "source ./dependencies/allure-commandline/bin/allure generate ./test/results"
        ],
        "working_directory": "ops/environment"
      }]
    }]
  }]
}
